# -*- mode: snippet -*-
# name: mod combination
# key: mod
# --
template <ll P> class ModCombi {
public:
  /** [0, right)内のi, jについてiCjを計算できる。
   */
  ModCombi(int right) {
    fact.resize(right);
    inv_fact.resize(right);
    for (ll i = 0; i < right; i++) {
      if (i == 0) {
        fact[0] = 1;
        inv_fact[0] = modinv(1);
      } else {
        fact[i] = i * fact[i - 1] % P;
        inv_fact[i] = modinv(i) * inv_fact[i - 1] % P;
      }
    }
  }
  /**
   * nCr
   */
  ll c(int n, int r) {
    if (n < r)
      return 0;
    return fact[n] * inv_fact[n - r] % P * inv_fact[r] % P;
  }

private:
  vector<ll> fact, inv_fact;

private:
  ll modinv(ll a) {
    return (P + extgcd(a, P).first % P) % P;
  }
  pair<ll, ll> extgcd(ll a, ll b) {
    if (b == 0)
      return {1, 0};
    auto [x, y] = extgcd(b, a % b);
    return {y, x - a / b * y};
  }
};
